package fixes.urlfinders;

import fixes.FixFinder;

import java.io.IOException;
import java.util.*;

/**
 *  Implementation of FixUrlFinder for CVEs collected from the NVIP Crawler
 *
 *  @author Richard Sawh
 */
public class VulnerabilityFixUrlFinder extends FixUrlFinder {

    public VulnerabilityFixUrlFinder() { }

    @Override
    public List<String> getUrls(String cveId) throws IOException {
        // Get all sources for the cve
        return new HashSet<>(FixFinder.getDatabaseHelper().getSpecificCveSources(cveId)).stream().toList();
    }

//    @Override
//    public ArrayList<String> run(String cveId) {
//        logger.info("Getting fixes for CVE: {}", cveId);
//        ArrayList<String> urlList = new ArrayList<>();
//
//        // Get all sources for the cve
//        Set<String> sources = new HashSet<>(FixFinder.getDatabaseHelper().getSpecificCveSources(cveId));
//
//        // TODO: Move to CXSecurityUrlFinder
//        // Test each source for a valid connection
//        for (String source : sources) {
//            //case for cxsecurityFinder
//            if(Objects.equals(source, "https://cxsecurity.com/cvemap")){
//                source = "https://cxsecurity.com/cveshow/".concat(cveId) ;
//            }
//
//            if (testConnection(source)) {
//                urlList.add(source);
//            }
//        }
//        return urlList;
//    }
}