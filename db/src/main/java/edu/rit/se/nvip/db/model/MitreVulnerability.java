package edu.rit.se.nvip.db.model;


import lombok.Getter;
import lombok.Setter;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.Objects;

/**
 * MITRE Vulnerability Object, used for comparing w/ MITRE
 */
public class MitreVulnerability {
    @Getter
    private String cveId;
    @Getter
    @Setter
    private Timestamp publishDate;

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof MitreVulnerability)) return false;
        MitreVulnerability that = (MitreVulnerability) o;
        return cveId.equals(that.cveId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(cveId);
    }

    /**
     * 3 main status types to track
     *
     * Public --> CVE is fully analyzed and is in MITRE
     * Reserved --> CVE is in MITRE, but it is reserved
     * Not in MITRE --> CVE is not in MITRE
     */
    public enum MitreStatus {
        PUBLIC("Public"),
        RESERVED("Reserved"),
        NOT_IN_MITRE("Not in MITRE");

        private final String status;
        MitreStatus(String status) {
            this.status = status;
        }

        @Override
        public String toString() {
            return this.status;
        }

        public static MitreStatus get(String status) {
            return Arrays.stream(MitreStatus.values())
                    .filter(m-> m.status.equalsIgnoreCase(status))
                    .findFirst().orElse(NOT_IN_MITRE);
        }
    }

    /**
     * -- GETTER --
     *  Getter for status in MITRE
     *
     * @return
     */
    @Getter
    private final MitreStatus status;

    public MitreVulnerability(String cveId, String status) {
        this.cveId = cveId;
        this.status = MitreStatus.get(status.replace("\"", ""));
    }

    @Override
    public String toString() {
        return this.cveId + " || " + this.publishDate + " || " + status;
    }

    public boolean inMitre() {
        return this.status == MitreStatus.PUBLIC; // this may be changed to include RESERVED
    }


}
