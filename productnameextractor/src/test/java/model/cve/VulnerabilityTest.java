package model.cve;

/**
 * Copyright 2023 Rochester Institute of Technology (RIT). Developed with
 * government support under contract 70RSAT19CB0000020 awarded by the United
 * States Department of Homeland Security.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

/**
 * Unit tests for Vulnerability class
 *
 * @author Richard Sawh
 */
public class VulnerabilityTest {

    @Test
    public void testDefaultConstructor() {
        Vulnerability vulnerability = new Vulnerability();
        assertNotNull(vulnerability);
        assertEquals(0, vulnerability.getVulnID());
        assertNull(vulnerability.getCveId());
        assertNull(vulnerability.getDescription());
    }

    @Test
    public void testParameterizedConstructor() {
        int vuln_id = 1;
        String cveId = "CVE-2023-1234";
        String description = "This is a test vulnerability.";
        int existAtNvd = 1;
        int existAtMitre = 1;
        String createdDate = "2023-08-03 12:00:00";

        Vulnerability vulnerability = new Vulnerability(vuln_id, cveId, description, existAtNvd, existAtMitre, createdDate);
        assertNotNull(vulnerability);
        assertEquals(vuln_id, vulnerability.getVulnID());
        assertEquals(cveId, vulnerability.getCveId());
        assertEquals(description, vulnerability.getDescription());
        assertEquals(existAtNvd, vulnerability.getNvdStatus());
        assertEquals(existAtMitre, vulnerability.getMitreStatus());
        assertEquals(createdDate, vulnerability.getCreateDate());
    }


    @Test
    public void testSetAndGetMethods() {
        Vulnerability vulnerability = new Vulnerability();

        // Test set and get methods for cveId
        String cveId = "CVE-2023-5678";
        vulnerability.setCVEID(cveId);
        assertEquals(cveId, vulnerability.getCveId());

        // Test set and get methods for platform
        String platform = "Windows 10";
        vulnerability.setPlatform(platform);
        assertEquals(platform, vulnerability.getPlatform());

        // Test set and get methods for publishDate
        String publishDate = "2023-08-03 12:00:00";
        vulnerability.setPublishDate(publishDate);
        assertEquals(publishDate, vulnerability.getPublishDate());

        // Test set and get methods for foundNewDescriptionForReservedCve
        boolean newDescription = true;
        vulnerability.setFoundNewDescriptionForReservedCve(newDescription);
        assertEquals(newDescription, vulnerability.isFoundNewDescriptionForReservedCve());
    }
}
