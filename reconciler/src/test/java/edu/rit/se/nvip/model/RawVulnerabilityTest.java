package edu.rit.se.nvip.model;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.sql.Timestamp;

class RawVulnerabilityTest {
    private final int dummyId;
    private final String dummyCveId;
    private final String dummyDescription;
    private final Timestamp dummyPubDate;
    private final Timestamp dummyModDate;
    private final Timestamp dummyCreateDate;
    private final String dummySourceUrl;

    RawVulnerabilityTest() {
        dummyId = 1;
        dummyCveId = "CVE-xxxx-xxx";
        dummyDescription = "vulnerability description";
        long current = System.currentTimeMillis();
        dummyPubDate = new Timestamp(current);
        dummyModDate = new Timestamp (3600L*1000 + current);
        dummyCreateDate = new Timestamp(3600L*2000 + current);
        dummySourceUrl = "website";
    }

    private RawVulnerability genVuln(int id) {
        return new RawVulnerability(id, dummyCveId, dummyDescription, dummyPubDate, dummyModDate, dummyCreateDate, dummySourceUrl);
    }

    private RawVulnerability genVuln() {
        return genVuln(dummyId);
    }

    @Test
    void constructorTest() {
        RawVulnerability vuln = genVuln();
        Assertions.assertEquals(dummyId, vuln.getId());
        Assertions.assertEquals(dummyCveId, vuln.getCveId());
        Assertions.assertEquals(dummyDescription, vuln.getDescription());
        Assertions.assertEquals(dummyPubDate, vuln.getPublishDate());
        Assertions.assertEquals(dummyModDate, vuln.getLastModifiedDate());
        Assertions.assertEquals(dummyCreateDate, vuln.getCreateDate());
        Assertions.assertEquals(dummySourceUrl, vuln.getSourceUrl());
    }
    @Test
    void getSourceUrl() {
        RawVulnerability vuln = genVuln();
        Assertions.assertEquals(dummySourceUrl, vuln.getSourceUrl());
    }

    @Test
    void getId() {
        RawVulnerability vuln = genVuln();
        Assertions.assertEquals(dummyId, vuln.getId());
    }

    @Test
    void getIdString() {
        RawVulnerability vuln = genVuln();
        Assertions.assertEquals(String.valueOf(vuln.getId()), vuln.getIdString());
    }

    @Test
    void testEquals() {
        RawVulnerability vuln1 = genVuln(0);
        RawVulnerability vuln2 = genVuln(1);
        Assertions.assertNotEquals(vuln1, vuln2);
        RawVulnerability vuln3 = genVuln(0);
        Assertions.assertEquals(vuln1, vuln3);
    }
}