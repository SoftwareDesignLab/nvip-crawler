package edu.rit.se.nvip.model;

import java.sql.Timestamp;
import java.util.Arrays;

public class NvdVulnerability extends Vulnerability {

    /**
     * 5 main status types to track
     *
     * Analyzed --> CVE is fully analyzed and is in NVD
     * Awaiting Analysis --> CVE is in NVD< but not yet started analysis yet
     * Undergoing Analysis --> CVE is in NVD and is currently being analyzed
     * Received --> No analysis, NVD just received the CVE and is in their backlog
     * Not in NVD --> CVE is not in NVD at all, in which the CVE wasn't returned when pulling NVD CVEs
     */

    private nvdStatus status;

    public enum nvdStatus {
        ANALYZED("Analyzed"),
        AWAITINGANALYSIS("Awaiting Analysis"),
        UNDERGOINGANALYSIS("Undergoing Analysis"),
        RECEIVED("Received"),
        NOTINNVD("Not in NVD");

        public final String status;
        nvdStatus(String status) {
            this.status = status;
        }
        @Override
        public String toString() {
            return this.status;
        }
        public static nvdStatus get(String status) {
            return Arrays.stream(nvdStatus.values()).filter(n->n.status.equals(status)).findFirst().orElse(NOTINNVD);
        }
    }

    public NvdVulnerability(String cveId, Timestamp publishDate, Timestamp lastModifiedDate, String status) {
        super(cveId, publishDate, lastModifiedDate);
        this.status = nvdStatus.get(status);
    }

    public NvdVulnerability(String cveID, Timestamp publishDate, String status) {
        super(cveID, publishDate);
        this.status = nvdStatus.get(status);
    }

    public nvdStatus getStatus() {
        return this.status;
    }

    @Override
    public String toString() {
        return this.cveId + " || " + this.publishDate + " || " + status;
    }



}
