# CI for NVIP

name: Java CI

on: [push]

env:
  AWS_REGION: 'us-east-1'

jobs:
  build-test-crawler:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          lfs: 'true'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Pull file from S3 bucket
        run: |
          cd nvip_data/productnameextraction
          aws s3 cp s3://binaries-for-crawler/w2v_model_250.bin .

      - name: Prepare MySQL Test DB
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE nvip;' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot
          mysql -e 'source nvip_data/mysql-database/CreateAndInitializeDb.sql' -uroot -proot

      - name: Test and Build Backend with Maven
        run: |
          mvn dependency:go-offline
          mvn package

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        
  deploy-crawler:
    runs-on: ubuntu-latest
    needs: build-test-crawler
    if: ${{ success() && github.ref == 'refs/heads/dev' }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Pull file from S3 bucket
        run: |
          cd nvip_data/productnameextraction
          aws s3 cp s3://binaries-for-crawler/w2v_model_250.bin .  

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image for Backend
        run: |
          docker build . -t nvip-crawler:dev -t ghcr.io/softwaredesignlab/nvip-crawler:dev
          docker push ghcr.io/softwaredesignlab/nvip-crawler:dev
